{
    "openapi": "3.0.2",
    "info": {
        "title": "Quart-Test - OpenAPI 3.0",
        "version": "1.0.19"
    },
    "servers": [
        {
            "url": "/api"
        }
    ],
    "paths": {
        "/register": {
            "post": {
                "tags": [
                    "AUTH"
                ],
                "summary": "Register User",
                "description": "Register User",
                "operationId": "registerUser",
                "requestBody": {
                    "description": "Create a new user",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "AUTH"
                ],
                "summary": "Login User",
                "description": "Login User",
                "operationId": "loginUser",
                "requestBody": {
                    "description": "Login user",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginUser"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginUser"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/plans/available": {
            "get": {
                "tags": [
                    "GENERAL"
                ],
                "summary": "Get available user plans",
                "description": "Get available user plans",
                "operationId": "availablePlans",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                }
            }
        },
        "/posts": {
            "get": {
                "tags": [
                    "GENERAL"
                ],
                "summary": "Get all posts",
                "description": "Get all posts",
                "operationId": "allPosts",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                }
            }
        },
        "/user/plans": {
            "get": {
                "tags": [
                    "USER'S PLANS"
                ],
                "summary": "Get all user plans",
                "description": "Get all user plans",
                "operationId": "Get all user plans",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/user/plans/{id}/buy": {
            "post": {
                "tags": [
                    "USER'S PLANS"
                ],
                "summary": "Buy plan",
                "description": "Buy plan",
                "operationId": "buyPlan",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Plan",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Pet not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/user/posts": {
            "get": {
                "tags": [
                    "USER'S POSTS"
                ],
                "summary": "Get all user posts",
                "description": "Get all user posts",
                "operationId": "userPosts",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "USER'S POSTS"
                ],
                "summary": "Add a new post to the store",
                "description": "Add a new post to the store",
                "operationId": "addPost",
                "requestBody": {
                    "description": "Create a new post in the store",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/user/posts/{id}": {
            "get": {
                "tags": [
                    "USER'S POSTS"
                ],
                "summary": "Get post by id",
                "description": "Get post by id",
                "operationId": "Get post by id",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id post",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "USER'S POSTS"
                ],
                "summary": "Update post by ID",
                "description": "Update post by ID",
                "operationId": "updatePost",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id post",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update post by ID",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Post"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Pet not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "USER'S POSTS"
                ],
                "summary": "Delete post by ID",
                "description": "Delete post by ID",
                "operationId": "deletePost",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id post",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Post not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/user/posts/{id}/activate": {
            "put": {
                "tags": [
                    "USER'S POSTS"
                ],
                "summary": "Activate post",
                "description": "Activate post",
                "operationId": "activatePost",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post id",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Pet not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/admin/plans": {
            "get": {
                "tags": [
                    "ADMIN PLANS"
                ],
                "summary": "Get all plans",
                "description": "Get all plans",
                "operationId": "Get all plans",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ADMIN PLANS"
                ],
                "summary": "Add a new plan to the store",
                "description": "Add a new plan to the store",
                "operationId": "addPlan",
                "requestBody": {
                    "description": "Create a new plan in the store",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Plan"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Plan"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Post": {
                "required": [
                    "title",
                    "description"
                ],
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "example": "Post title"
                    },
                    "description": {
                        "type": "string",
                        "example": "Post description"
                    }
                }
            },
            "User": {
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "name"
                    },
                    "email": {
                        "type": "string",
                        "example": "user@user.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "12345678"
                    }
                }
            },
            "Plan": {
                "required": [
                    "name",
                    "price",
                    "publications",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Plan name"
                    },
                    "price": {
                        "type": "number",
                        "example": 3.85
                    },
                    "publications": {
                        "type": "integer",
                        "example": 8
                    },
                    "status": {
                        "type": "integer",
                        "enum": [1, 2],
                        "example": 1
                    }
                }
            },
            "LoginUser": {
                "required": [
                    "email",
                    "password"
                ],
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "example": "user@user.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "12345678"
                    }
                }
            },
            "ApiResponse": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "type": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "##default"
                }
            }
        },
        "requestBodies": {
            "UserArray": {
                "description": "List of user object",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "Authorization": {
                "type": "apiKey",
                "name": "Authorization",
                "in": "header"
            }
        }
    }
}
